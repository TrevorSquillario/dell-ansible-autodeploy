# Install / Configure BIOS
cdrom

# Install parameters
lang en_US.UTF-8
keyboard --vckeymap=us --xlayouts='us'
timezone Etc/UTC

# Services and autostarts
selinux --permissive

#Firewalld enable 2 line below
services --enabled=NetworkManager,sshd,firewalld
firewall --enabled --service=ssh

# Miscelaneous
eula --agreed
ignoredisk --only-use=sda
firstboot --disabled
skipx
text
reboot --eject

# Network
# Disabling network configuration
# network  --bootproto=dhcp --device=eth0 --onboot=yes --ipv6=auto --activate
# network --hostname=localhost.localdomain

# Remove existing disk configurations
zerombr
clearpart --drive=sda --all --initlabel --disklabel=gpt

# Disk Configuration
bootloader --append="cloud-init=disabled" --location=mbr 

# ***TS: Changed to specify efi partition
part /boot/efi --fstype=efi --ondisk=sda --size=1024
part /boot --fstype=ext4 --ondisk=sda --size=1024
part biosboot --fstype="biosboot" --size=1
part pv.01 --fstype="lvmpv" --size=1 --grow

# LVM Configuration
volgroup vg_root pv.01
logvol /              --fstype ext4 --name=lv_root         --vgname=vg_root --size=40000
logvol /opt           --fstype ext4 --name=lv_opt          --vgname=vg_root --size=10000
logvol /tmp           --fstype ext4 --name=lv_tmp          --vgname=vg_root --size=10000
logvol /home          --fstype ext4 --name=lv_home         --vgname=vg_root --size=10000
logvol /var           --fstype ext4 --name=lv_var          --vgname=vg_root --size=10000
logvol swap --fstype swap --name=lv_swap         --vgname=vg_root --size=10000

# User Configuration (P@ssw0rd!)
rootpw --iscrypted $6$prynx1TkvQ3bLqK8$PIBUbejTMixTa4MTQZmzMNydjkJGoBhU21n6nqhOLpTZrr19ETlEE2ucZHfvcXMPY.Y2xY/Vn/U0sMgZtgVdg.

# Packages
%packages --ignoremissing
@^minimal-environment
openssh-server
wget
rsync
perl
%end

%post
sudo systemctl mask kdump.service
pip install requests
%end

%post
### Lay down your SSH publickey(s) to allow Ansible Tower to provision as soon as we finish here.
mkdir -p ~root/.ssh

cat << EOF >> ~root/.ssh/authorized_keys
## Hostkeys here...
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC4jbUblahblahblah
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCk4lMblahblahblah

EOF

chmod 700 ~root/.ssh
chmod 600 ~root/.ssh/authorized_keys
chown -R root: ~root/.ssh

### Grab the firstboot Perl script that will phone home to Ansible Tower
wget -O /root/tower-callback.py http://server.example.com/tower-callback.py
chmod +x /root/tower-callback.py

### Lay down the one-time service that will perform the Ansible Tower API call
cat << EOF > /usr/lib/systemd/system/tower-provision.service
[Unit]
Description=Ansible Tower API Call to Provision Server
Wants=network-online.target
After=network-online.target

[Service]
Type=oneshot

ExecStart=/root/tower-callback.py
ExecStartPost=/usr/bin/systemctl disable tower-provision

[Install]
WantedBy=multi-user.target

EOF

### And this sets the service as enabled, to run next boot
systemctl enable tower-provision.service

%end